<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="About" xml:space="preserve">
    <value>About</value>
  </data>
  <data name="AboutPositionMessage" xml:space="preserve">
    <value>Your current position is {0}° {1}° with heading {2}° north.</value>
  </data>
  <data name="Accelerometer" xml:space="preserve">
    <value>Accelerometer</value>
  </data>
  <data name="AccelerometerLabel" xml:space="preserve">
    <value>Accelerometer:</value>
  </data>
  <data name="Actions" xml:space="preserve">
    <value>Actions</value>
  </data>
  <data name="Advanced" xml:space="preserve">
    <value>Advanced</value>
  </data>
  <data name="AutomaticHint" xml:space="preserve">
    <value>Automatic</value>
  </data>
  <data name="ChangeWorkingDirectory" xml:space="preserve">
    <value>Change working directory</value>
  </data>
  <data name="Close" xml:space="preserve">
    <value>Close</value>
  </data>
  <data name="ColorPaletteLabel" xml:space="preserve">
    <value>Color palette:</value>
  </data>
  <data name="CommandHistoryLabel" xml:space="preserve">
    <value>Command history:</value>
  </data>
  <data name="Compass" xml:space="preserve">
    <value>Compass</value>
  </data>
  <data name="CompassLabel" xml:space="preserve">
    <value>Compass:</value>
  </data>
  <data name="Console" xml:space="preserve">
    <value>Console</value>
  </data>
  <data name="ContourSettings" xml:space="preserve">
    <value>Contour settings</value>
  </data>
  <data name="DataTitleHint" xml:space="preserve">
    <value>Enter the title here</value>
  </data>
  <data name="DataTitleLabel" xml:space="preserve">
    <value>Data title:</value>
  </data>
  <data name="DecisionRequired" xml:space="preserve">
    <value>Decision required</value>
  </data>
  <data name="Disabled" xml:space="preserve">
    <value>Disabled</value>
  </data>
  <data name="Enabled" xml:space="preserve">
    <value>Enabled</value>
  </data>
  <data name="EnterQuickStatement" xml:space="preserve">
    <value>Enter quick statement</value>
  </data>
  <data name="ErrorLogLabel" xml:space="preserve">
    <value>Error log:</value>
  </data>
  <data name="EvaluateInput" xml:space="preserve">
    <value>Evaluate input</value>
  </data>
  <data name="EvaluateMathDrawingsLabel" xml:space="preserve">
    <value>Evaluate math drawings:</value>
  </data>
  <data name="FontSizeLabel" xml:space="preserve">
    <value>Font size:</value>
  </data>
  <data name="GlobalStartupScriptLabel" xml:space="preserve">
    <value>Global startup script:
(requires admin privileges)</value>
  </data>
  <data name="Gyrometer" xml:space="preserve">
    <value>Gyrometer</value>
  </data>
  <data name="GyrometerLabel" xml:space="preserve">
    <value>Gyrometer:</value>
  </data>
  <data name="HeightInPx" xml:space="preserve">
    <value>Height (px)</value>
  </data>
  <data name="Inclinometer" xml:space="preserve">
    <value>Inclinometer</value>
  </data>
  <data name="InclinometerLabel" xml:space="preserve">
    <value>Inclinometer:</value>
  </data>
  <data name="Interaction" xml:space="preserve">
    <value>Interaction</value>
  </data>
  <data name="Light" xml:space="preserve">
    <value>Light</value>
  </data>
  <data name="LightLabel" xml:space="preserve">
    <value>Light:</value>
  </data>
  <data name="LivestreamLabel" xml:space="preserve">
    <value>Livestream:</value>
  </data>
  <data name="LoadWorkspace" xml:space="preserve">
    <value>Load workspace</value>
  </data>
  <data name="MaximumEntriesLabel" xml:space="preserve">
    <value>Maximum entries:</value>
  </data>
  <data name="OpenDocumentation" xml:space="preserve">
    <value>Open documentation</value>
  </data>
  <data name="OpenEditor" xml:space="preserve">
    <value>Open editor</value>
  </data>
  <data name="OpenFile" xml:space="preserve">
    <value>Open file...</value>
  </data>
  <data name="Options" xml:space="preserve">
    <value>Options</value>
  </data>
  <data name="PlaceTheStatement" xml:space="preserve">
    <value>Place the statement here.</value>
  </data>
  <data name="PluginDescription" xml:space="preserve">
    <value>Plugins can extend the possibilities of Sumerics. Including a plugin is quite straight forward. Just place the plugin you want to include in the subfolder plugins of Sumerics. It will then be shown in the list below. This list is the location where you can enable or disable existing plugins.</value>
  </data>
  <data name="Plugins" xml:space="preserve">
    <value>Plugins</value>
  </data>
  <data name="Quickview" xml:space="preserve">
    <value>Quickview</value>
  </data>
  <data name="RestartRequired" xml:space="preserve">
    <value>Changes require a restart of the application.</value>
  </data>
  <data name="Samples" xml:space="preserve">
    <value>Samples</value>
  </data>
  <data name="SamplesDescription" xml:space="preserve">
    <value>Demonstrations and samples</value>
  </data>
  <data name="Save" xml:space="preserve">
    <value>Save</value>
  </data>
  <data name="SaveFile" xml:space="preserve">
    <value>Save file...</value>
  </data>
  <data name="SaveImage" xml:space="preserve">
    <value>Save image...</value>
  </data>
  <data name="SaveWorkspace" xml:space="preserve">
    <value>Save workspace</value>
  </data>
  <data name="SearchHelp" xml:space="preserve">
    <value>Search help</value>
  </data>
  <data name="SearchVariables" xml:space="preserve">
    <value>Search variables</value>
  </data>
  <data name="SensorPlots" xml:space="preserve">
    <value>Sensor plots</value>
  </data>
  <data name="Sensors" xml:space="preserve">
    <value>Sensors</value>
  </data>
  <data name="ShowLevelsHint" xml:space="preserve">
    <value>Lines visible</value>
  </data>
  <data name="ShowLevelsLabel" xml:space="preserve">
    <value>Show levels:</value>
  </data>
  <data name="Updates" xml:space="preserve">
    <value>Updates</value>
  </data>
  <data name="UsedPackages" xml:space="preserve">
    <value>Sensor Numerics uses the following packages:</value>
  </data>
  <data name="UserStartupScriptLabel" xml:space="preserve">
    <value>User startup script:</value>
  </data>
  <data name="ViewInEditor" xml:space="preserve">
    <value>View in editor</value>
  </data>
  <data name="Visualization" xml:space="preserve">
    <value>Visualization</value>
  </data>
  <data name="WatchSamples" xml:space="preserve">
    <value>Watch samples</value>
  </data>
  <data name="WidthInPx" xml:space="preserve">
    <value>Width (px)</value>
  </data>
</root>